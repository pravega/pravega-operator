## Default values for pravega.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

version: 0.8.0

tls: {}
  # secret:
  #   controller: "controller-pki"
  #   segmentStore: "segmentstore-pki"
  # caBundle: ""

authentication:
  enabled: false
  ## passwordAuthSecret is ignored if authentication is disabled
  passwordAuthSecret:
  #segmentStoreToken is ignored if authentication is disabled
  segmentStoreTokenSecret:
  #controllerTokenSecret is ignored if authentication is disabled
  controllerTokenSecret:

zookeeperUri: zookeeper-client:2181
bookkeeperUri: bookkeeper-bookie-headless:3181

externalAccess:
  enabled: false
  ## type and domainName are ignored if external access is disabled
  type: LoadBalancer
  domainName:

image:
  repository: pravega/pravega
  pullPolicy: IfNotPresent

hooks:
  image:
    repository: lachlanevenson/k8s-kubectl
    tag: v1.16.10
  backoffLimit: 10

debugLogging: false

serviceAccount:
  name: pravega-components

controller:
  replicas: 1
  maxUnavailableControllerReplicas: 1
  resources:
    requests:
      cpu: 500m
      memory: 1Gi
    limits:
      cpu: 1000m
      memory: 2Gi
  securityContext: {}
    # runAsUser: 0
  affinity: {}
  ## service type and annotations are ignored if external access is disabled
  service:
    ## used to override the service type for controller
    type:
    annotations: {}
  jvmOptions: []
  labels: {}

segmentStore:
  replicas: 1
  maxUnavailableSegmentStoreReplicas: 1
  secret: {}
    # name:
    # path:
  env:
  resources:
    requests:
      cpu: 1000m
      memory: 4Gi
    limits:
      cpu: 2000m
      memory: 4Gi
  securityContext: {}
    # runAsUser: 0
  affinity: {}
  ## service type and annotations are ignored if external access is disabled
  service:
    ## used to override the service type for segmentStore
    type:
    annotations: {}
    loadBalancerIP:
    externalTrafficPolicy:
  jvmOptions: ["-Xmx2g", "-XX:MaxDirectMemorySize=2g"]
  labels: {}

storage:

  longtermStorage:
    ## configure the long term storage backend type
    ## accepted values : filesystem/ecs/hdfs
    ## default option is filesystem
    type: filesystem

    ## fileSystem is used to configure a pre-created Persistent Volume Claim
    ## as the long term storage backend
    ## this is the default longtermStorage type
    filesystem:
      pvc: pravega-tier2

    ## ecs is used to configure a Dell EMC ECS system as the long term storage backend
    ## considered only if storage.longtermStorage.type = ecs
    ecs: {}
      # configUri: https://object.ecstestdrive.com?namespace=namespace%26identity=user%26secretKey=password
      # bucket: "bucket"
      # prefix: "prefix"
      # credentials: ecs-credentials

    ## hdfs is used to configure an HDFS system as long term storage backend
    ## considered only if storage.longtermStorage.type = hdfs
    hdfs: {}
      # uri: ""
      # root: ""
      # replicationFactor:

  cache:
    size: 20Gi
    className:

options:
  bookkeeper.ensemble.size: "3"
  bookkeeper.write.quorum.size: "3"
  bookkeeper.ack.quorum.size: "3"
  bookkeeper.write.timeout.milliseconds: "60000"
  bookkeeper.write.outstanding.bytes.max: "33554432"
  pravegaservice.cache.size.max: "1073741824"
  pravegaservice.cache.time.seconds.max: "600"
  hdfs.block.size: "67108864"
  writer.flush.threshold.bytes: "67108864"
  writer.flush.size.bytes.max: "67108864"
  pravegaservice.container.count: "8"
  controller.container.count: "8"
  controller.retention.bucket.count: "4"
  controller.service.asyncTaskPool.size: "20"
  controller.retention.thread.count: "4"
  log.level: "INFO"
  ## The following parameters are only useful if you are going to deploy metrics in this cluster.
  # metrics.dynamicCache.size: "100000"
  # metrics.statistics.enable: "true"
  # metrics.statsD.reporter.enable: "false"
  # metrics.statsD.connect.host: "telegraph.default"
  # metrics.statsD.connect.port: "8125"
  # metrics.influxDB.reporter.enable: "true"
  # metrics.output.frequency.seconds: "10"
  # metrics.influxDB.connect.uri: "http://INFLUXDB-IP:8086"
  # controller.metrics.dynamicCache.size: "100000"
  # controller.metrics.statistics.enable: "true"
  # controller.metrics.statsD.reporter.enable: "false"
  # controller.metrics.statsD.connect.host: "telegraph.default"
  # controller.metrics.statsD.connect.port: "8125"
  # controller.metrics.influxDB.reporter.enable: "true"
  # controller.metrics.output.frequency.seconds: "10"
  # controller.metrics.influxDB.connect.uri: "http://INFLUXDB-IP:8086"
