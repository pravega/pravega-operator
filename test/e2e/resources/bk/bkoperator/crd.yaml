apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: bookkeeperclusters.bookkeeper.pravega.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.currentVersion
    description: The current bookkeeper version
    name: Version
    type: string
  - JSONPath: .spec.version
    description: The desired bookkeeper version
    name: Desired Version
    type: string
  - JSONPath: .status.replicas
    description: The number of desired bookkeeper members
    name: Desired Members
    type: integer
  - JSONPath: .status.readyReplicas
    description: The number of ready bookkeeper members
    name: Ready Members
    type: integer
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: bookkeeper.pravega.io
  names:
    kind: BookkeeperCluster
    listKind: BookkeeperClusterList
    plural: bookkeeperclusters
    shortNames:
    - bk
    singular: bookkeepercluster
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClusterSpec defines the desired state of BookkeeperCluster
          properties:
            autoRecovery:
              description: AutoRecovery indicates whether or not BookKeeper auto recovery
                is enabled. Defaults to true.
              type: boolean
            blockOwnerDeletion:
              description: If true, AND if the owner has the "foregroundDeletion"
                finalizer, then the owner cannot be deleted from the key-value store
                until this reference is removed. Defaults to true
              type: boolean
            envVars:
              description: Provides the name of the configmap created by the user
                to provide additional key-value pairs that need to be configured into
                the bookie pods as environmental variables
              type: string
            image:
              description: Image defines the BookKeeper Docker image to use. By default,
                "pravega/bookkeeper" will be used.
              properties:
                imageSpec:
                  description: ImageSpec defines the fields needed for a Docker repository
                    image
                  properties:
                    pullPolicy:
                      description: PullPolicy describes a policy for if/when to pull
                        a container image
                      enum:
                      - Always
                      - Never
                      - IfNotPresent
                      type: string
                    repository:
                      type: string
                    tag:
                      description: 'Deprecated: Use `spec.Version` instead'
                      type: string
                  required:
                  - pullPolicy
                  - repository
                  type: object
              type: object
            jvmOptions:
              description: JVM is the JVM options for bookkeeper. It will be passed
                to the JVM for performance tuning. If this field is not specified,
                the operator will use a set of default options that is good enough
                for general deployment.
              properties:
                extraOpts:
                  items:
                    type: string
                  type: array
                gcLoggingOpts:
                  items:
                    type: string
                  type: array
                gcOpts:
                  items:
                    type: string
                  type: array
                memoryOpts:
                  items:
                    type: string
                  type: array
              type: object
            maxUnavailableBookkeeperReplicas:
              description: MaxUnavailableBookkeeperReplicas defines the MaxUnavailable
                Bookkeeper Replicas Default is 1.
              format: int32
              type: integer              
            options:
              additionalProperties:
                type: string
              description: Options is the Bookkeeper configuration that is to override
                the bk_server.conf in bookkeeper. Some examples can be found here
                https://github.com/apache/bookkeeper/blob/master/docker/README.md
              type: object
            probes:
              description: Probes specifies the timeout values for the Readiness and
                Liveness Probes for the bookkeeper pods.
              properties:
                livenessProbe:
                  properties:
                    failureThreshold:
                      format: int32
                      minimum: 0
                      type: integer
                    initialDelaySeconds:
                      format: int32
                      minimum: 0
                      type: integer
                    periodSeconds:
                      format: int32
                      minimum: 0
                      type: integer
                    successThreshold:
                      format: int32
                      minimum: 0
                      type: integer
                    timeoutSeconds:
                      format: int32
                      minimum: 0
                      type: integer
                  type: object
                readinessProbe:
                  properties:
                    failureThreshold:
                      format: int32
                      minimum: 0
                      type: integer
                    initialDelaySeconds:
                      format: int32
                      minimum: 0
                      type: integer
                    periodSeconds:
                      format: int32
                      minimum: 0
                      type: integer
                    successThreshold:
                      format: int32
                      minimum: 0
                      type: integer
                    timeoutSeconds:
                      format: int32
                      minimum: 0
                      type: integer
                  type: object
              type: object
            replicas:
              description: Replicas defines the number of BookKeeper replicas. Minimum
                is 3. Defaults to 3. If testmode is enabled, 1 replica is allowed.
              format: int32
              minimum: 1
              type: integer
            resources:
              description: BookieResources specifies the request and limit of resources
                that bookie can have. BookieResources includes CPU and memory resources
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            serviceAccountName:
              description: ServiceAccountName configures the service account used
                on BookKeeper instances
              type: string
            storage:
              description: Storage configures the storage for BookKeeper
              properties:
                indexVolumeClaimTemplate:
                  description: IndexVolumeClaimTemplate is the spec to describe PVC
                    for the BookKeeper index This field is optional. If no PVC spec
                    and there is no default storage class, stateful containers will
                    use emptyDir as volume
                  properties:
                    accessModes:
                      description: 'AccessModes contains the desired access modes
                        the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                      items:
                        enum:
                        - ReadWriteOnce
                        - ReadOnlyMany
                        - ReadWriteMany
                        type: string
                      type: array
                    dataSource:
                      description: This field requires the VolumeSnapshotDataSource
                        alpha feature gate to be enabled and currently VolumeSnapshot
                        is the only supported data source. If the provisioner can
                        support VolumeSnapshot data source, it will create a new volume
                        and data will be restored to the volume at the same time.
                        If the provisioner does not support VolumeSnapshot data source,
                        volume will not be created and the failure will be reported
                        as an event. In the future, we plan to support more data source
                        types and the behavior of the provisioner may change.
                      properties:
                        apiGroup:
                          description: APIGroup is the group for the resource being
                            referenced. If APIGroup is not specified, the specified
                            Kind must be in the core API group. For any other third-party
                            types, APIGroup is required.
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                      required:
                      - kind
                      - name
                      nullable: true
                      type: object
                    resources:
                      description: 'Resources represents the minimum resources the
                        volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    selector:
                      description: A label query over volumes to consider for binding.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                enum:
                                - In
                                - NotIn
                                - Exists
                                - DoesNotExist
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    storageClassName:
                      description: 'Name of the StorageClass required by the claim.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                      type: string
                    volumeMode:
                      description: volumeMode defines what type of volume is required
                        by the claim. Value of Filesystem is implied when not included
                        in claim spec. This is a beta feature.
                      enum:
                      - Block
                      - Filesystem
                      type: string
                    volumeName:
                      description: VolumeName is the binding reference to the PersistentVolume
                        backing this claim.
                      type: string
                  type: object
                journalVolumeClaimTemplate:
                  description: JournalVolumeClaimTemplate is the spec to describe
                    PVC for the BookKeeper journal This field is optional. If no PVC
                    spec and there is no default storage class, stateful containers
                    will use emptyDir as volume
                  properties:
                    accessModes:
                      description: 'AccessModes contains the desired access modes
                        the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                      items:
                        enum:
                        - ReadWriteOnce
                        - ReadOnlyMany
                        - ReadWriteMany
                        type: string
                      type: array
                    dataSource:
                      description: This field requires the VolumeSnapshotDataSource
                        alpha feature gate to be enabled and currently VolumeSnapshot
                        is the only supported data source. If the provisioner can
                        support VolumeSnapshot data source, it will create a new volume
                        and data will be restored to the volume at the same time.
                        If the provisioner does not support VolumeSnapshot data source,
                        volume will not be created and the failure will be reported
                        as an event. In the future, we plan to support more data source
                        types and the behavior of the provisioner may change.
                      properties:
                        apiGroup:
                          description: APIGroup is the group for the resource being
                            referenced. If APIGroup is not specified, the specified
                            Kind must be in the core API group. For any other third-party
                            types, APIGroup is required.
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                      required:
                      - kind
                      - name
                      nullable: true
                      type: object
                    resources:
                      description: 'Resources represents the minimum resources the
                        volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    selector:
                      description: A label query over volumes to consider for binding.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                enum:
                                - In
                                - NotIn
                                - Exists
                                - DoesNotExist
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    storageClassName:
                      description: 'Name of the StorageClass required by the claim.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                      type: string
                    volumeMode:
                      description: volumeMode defines what type of volume is required
                        by the claim. Value of Filesystem is implied when not included
                        in claim spec. This is a beta feature.
                      enum:
                      - Block
                      - Filesystem
                      type: string
                    volumeName:
                      description: VolumeName is the binding reference to the PersistentVolume
                        backing this claim.
                      type: string
                  type: object
                ledgerVolumeClaimTemplate:
                  description: LedgerVolumeClaimTemplate is the spec to describe PVC
                    for the BookKeeper ledger This field is optional. If no PVC spec
                    and there is no default storage class, stateful containers will
                    use emptyDir as volume
                  properties:
                    accessModes:
                      description: 'AccessModes contains the desired access modes
                        the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                      items:
                        enum:
                        - ReadWriteOnce
                        - ReadOnlyMany
                        - ReadWriteMany
                        type: string
                      type: array
                    dataSource:
                      description: This field requires the VolumeSnapshotDataSource
                        alpha feature gate to be enabled and currently VolumeSnapshot
                        is the only supported data source. If the provisioner can
                        support VolumeSnapshot data source, it will create a new volume
                        and data will be restored to the volume at the same time.
                        If the provisioner does not support VolumeSnapshot data source,
                        volume will not be created and the failure will be reported
                        as an event. In the future, we plan to support more data source
                        types and the behavior of the provisioner may change.
                      properties:
                        apiGroup:
                          description: APIGroup is the group for the resource being
                            referenced. If APIGroup is not specified, the specified
                            Kind must be in the core API group. For any other third-party
                            types, APIGroup is required.
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                      required:
                      - kind
                      - name
                      nullable: true
                      type: object
                    resources:
                      description: 'Resources represents the minimum resources the
                        volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute
                            resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute
                            resources required. If Requests is omitted for a container,
                            it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. More info:
                            https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    selector:
                      description: A label query over volumes to consider for binding.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                enum:
                                - In
                                - NotIn
                                - Exists
                                - DoesNotExist
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                    storageClassName:
                      description: 'Name of the StorageClass required by the claim.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                      type: string
                    volumeMode:
                      description: volumeMode defines what type of volume is required
                        by the claim. Value of Filesystem is implied when not included
                        in claim spec. This is a beta feature.
                      enum:
                      - Block
                      - Filesystem
                      type: string
                    volumeName:
                      description: VolumeName is the binding reference to the PersistentVolume
                        backing this claim.
                      type: string
                  type: object
              type: object
            version:
              description: "Version is the expected version of the Bookkeeper cluster.
                The bookkeeper-operator will eventually make the Bookkeeper cluster
                version equal to the expected version. \n The version must follow
                the [semver]( http://semver.org) format, for example \"3.2.13\". Only
                Bookkeeper released versions are supported: https://hub.docker.com/r/pravega/bookkeeper/tags
                \n If version is not set, default is \"0.4.0\"."
              type: string
            zookeeperUri:
              description: 'ZookeeperUri specifies the hostname/IP address and port
                in the format "hostname:port". By default, the value "zookeeper-client:2181"
                is used, that corresponds to the default Zookeeper service created
                by the Pravega Zookkeeper operator available at: https://github.com/pravega/zookeeper-operator'
              type: string
          type: object
        status:
          description: BookkeeperClusterStatus defines the observed state of BookkeeperCluster
          properties:
            conditions:
              description: Conditions list all the applied conditions
              items:
                description: ClusterCondition shows the current condition of a Bookkeeper
                  cluster. Comply with k8s API conventions
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    type: string
                  lastUpdateTime:
                    description: The last time this condition was updated.
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of Bookkeeper cluster condition.
                    type: string
                type: object
              type: array
            currentReplicas:
              description: CurrentReplicas is the number of current replicas in the
                cluster
              format: int32
              type: integer
            currentVersion:
              description: CurrentVersion is the current cluster version
              type: string
            members:
              description: Members is the Bookkeeper members in the cluster
              properties:
                ready:
                  items:
                    type: string
                  nullable: true
                  type: array
                unready:
                  items:
                    type: string
                  nullable: true
                  type: array
              type: object
            readyReplicas:
              description: ReadyReplicas is the number of ready replicas in the cluster
              format: int32
              type: integer
            replicas:
              description: Replicas is the number of desired replicas in the cluster
              format: int32
              type: integer
            targetVersion:
              description: TargetVersion is the version the cluster upgrading to.
                If the cluster is not upgrading, TargetVersion is empty.
              type: string
            versionHistory:
              items:
                type: string
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
